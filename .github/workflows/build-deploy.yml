name: Jekyll Site Build and Deploy

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    env:
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      CREATE_WISH_ITEM: ${{ vars.CREATE_WISH_ITEM }}
      DELETE_WISH_ITEM: ${{ vars.DELETE_WISH_ITEM }}
      GET_WISH_ITEMS: ${{ vars.GET_WISH_ITEMS }}
      SELECT_WISH_ITEM: ${{ vars.SELECT_WISH_ITEM }}
      UPDATE_WISH_ITEM: ${{ vars.UPDATE_WISH_ITEM }}
      CACHE_KEY: wishlistCache
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: prod1
      
      - name: Cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build Jekyll Site
        uses: actions/jekyll-build-pages@v1
        with:
          source: .
          destination: ./_site
          token: ${{ secrets.GITHUB_TOKEN }}
          future: false
          build_revision: ${{ github.sha }}
          verbose: true

      - name: Upload Built Site
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./_site
         
  # report-build-status:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Report Build Status
  #       run: |
  #           gh api -X POST "repos/$GITHUB_REPOSITORY/pages/telemetry" \
  #           # Additional commands or environment variables
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  deploy:
    runs-on: ubuntu-latest
    # needs: report-build-status
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
